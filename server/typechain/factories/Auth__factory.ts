/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Auth, AuthInterface } from "../Auth";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimant",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "claim",
        type: "bytes",
      },
    ],
    name: "setClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633f733c6b1461003b5780637831497a1461006b575b600080fd5b610055600480360381019061005091906102c6565b610087565b6040516100629190610393565b60405180910390f35b61008560048036038101906100809190610302565b610134565b005b60006020528160005260406000206020528060005260406000206000915091505080546100b390610436565b80601f01602080910402602001604051908101604052809291908181526020018280546100df90610436565b801561012c5780601f106101015761010080835404028352916020019161012c565b820191906000526020600020905b81548152906001019060200180831161010f57829003601f168201915b505050505081565b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091906101be9291906101c4565b50505050565b8280546101d090610436565b90600052602060002090601f0160209004810192826101f25760008555610239565b82601f1061020b57803560ff1916838001178555610239565b82800160010185558215610239579182015b8281111561023857823582559160200191906001019061021d565b5b509050610246919061024a565b5090565b5b8082111561026357600081600090555060010161024b565b5090565b600081359050610276816104a8565b92915050565b60008083601f84011261028e57600080fd5b8235905067ffffffffffffffff8111156102a757600080fd5b6020830191508360018202830111156102bf57600080fd5b9250929050565b600080604083850312156102d957600080fd5b60006102e785828601610267565b92505060206102f885828601610267565b9150509250929050565b60008060006040848603121561031757600080fd5b600061032586828701610267565b935050602084013567ffffffffffffffff81111561034257600080fd5b61034e8682870161027c565b92509250509250925092565b6000610365826103b5565b61036f81856103c0565b935061037f818560208601610403565b61038881610497565b840191505092915050565b600060208201905081810360008301526103ad818461035a565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006103dc826103e3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610421578082015181840152602081019050610406565b83811115610430576000848401525b50505050565b6000600282049050600182168061044e57607f821691505b6020821081141561046257610461610468565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6104b1816103d1565b81146104bc57600080fd5b5056fea264697066735822122065b4702aa857f1caa66c27390e0b5317c18f2ce222c219a57b9f1065544687ac64736f6c63430008040033";

export class Auth__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Auth> {
    return super.deploy(overrides || {}) as Promise<Auth>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Auth {
    return super.attach(address) as Auth;
  }
  connect(signer: Signer): Auth__factory {
    return super.connect(signer) as Auth__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthInterface {
    return new utils.Interface(_abi) as AuthInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Auth {
    return new Contract(address, _abi, signerOrProvider) as Auth;
  }
}
